# Default values for registry-nginx-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: busybox
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: registry.local.aggregion.com
      paths:
        - path: /
  tls:
    - hosts:
        - registry.local.aggregion.com

config:
  proxyPass: https://registry.aggregion.com:443
  proxySslVerify: false
  ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrRENDQWVBQ0NRQ0NyYVRZUTdublBqQU5CZ2txaGtpRzl3MEJBUXNGQURBK01Sd3dHZ1lEVlFRRERCTnMKYjJOaGJDNWhaMmR5WldkcGIyNHVZMjl0TVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUJ3d0lUbVYzSUZsdgpjbXN3SGhjTk1qSXhNVEUyTVRZMU5ETXpXaGNOTXpJeE1URXpNVFkxTkRNeldqQStNUnd3R2dZRFZRUUREQk5zCmIyTmhiQzVoWjJkeVpXZHBiMjR1WTI5dE1Rc3dDUVlEVlFRR0V3SlZVekVSTUE4R0ExVUVCd3dJVG1WM0lGbHYKY21zd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM4ZThDSGtpRU5mYUdYS201LwpmajBWZGJBYVNUVjJuUTBLVXgwM0ROVzNIT1J2cDZuS2FLVFZWeGtmZXVtaXU2bjhYSy8wOEFtbFU2UlIxY0NyCk1ydHgvbFg5TytVOUNXanpCTUlsWnVGcUcyVFE4UHhJTFpjdVVOVXhIV0lIK0wxZE5vYkhjcjc5eGZ2VzEwaWwKa1JmcEZLVTBDT1JhSG9ldnhrZVM0WTUxV1A1Wnk4QXI3a0syVHZnRkc2QVdZZnFHdXZqUVJyWnRITXpVam5uWgozaFNaVVJqc2NsZHduMENhb1ZpWW94SHI3L1JMUlMvTjhKRXE0RkVEK2hmMmZVSmNoRklBdHRtSzcyeUVEcU9GClY5Uzl4T3EzN2sybDhZVFBYL1BicTFFZXVINllaS1pZTklCSGREWGhvVGE5YkZScG52OVdEUGJRY1ZBYis3SXUKbGlJMUFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFoUThvNmM2UFFERzF1Wnk2V01rSXF5cFlvbgpESUk1OUdLajdpYitPUklSYWU4SEpHTHFQcGc2aWJlQVJWU2EyRDdYb05COHQraDZ6ZDNlOTVjWWZqb1hxQjllCkpPOFpXMWRHdUlKUWNNVStvenF2OFRWRTFLYjNwdGU4MGJnQ1BPN09SMTJqdys0a3NsS0ZKZlRabnd3WmVUblcKbHBGUkM0NUtMOVovZFJQdm93RVBrN0dCSTVDZUdObDdKaHhwa3dRQ1JmLzMzRDM5bHQxV0VOcTk1OUNUYnpwSwp2QTZSZy9ocE9VM2V2ejJRSUY2R3NyQlJmdi9ZYnQyYjVpTnVEdmMyRXZXR3N3eCtsQnU2eXFiNXZET1Y4cVd1ClRmemNnSmNVSnJPOGY2UERvR2NGbG1rYVN5M1Z1YVU5SHVyZEZFdzErU3o2NDZ1QzF3Y25yaG9tcTJjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tlsCert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQyVENDQXNHZ0F3SUJBZ0lKQUx3cGdudTFiKzdpTUEwR0NTcUdTSWIzRFFFQkN3VUFNRDR4SERBYUJnTlYKQkFNTUUyeHZZMkZzTG1GblozSmxaMmx2Ymk1amIyMHhDekFKQmdOVkJBWVRBbFZUTVJFd0R3WURWUVFIREFoTwpaWGNnV1c5eWF6QWVGdzB5TWpFeE1UWXhOalU1TWpaYUZ3MHpNakV4TVRNeE5qVTVNalphTUhreEN6QUpCZ05WCkJBWVRBbFZUTVJFd0R3WURWUVFJREFoT1pYY2dXVzl5YXpFUk1BOEdBMVVFQnd3SVRtVjNJRmx2Y21zeEVqQVEKQmdOVkJBb01DVUZuWjNKbFoybHZiakVZTUJZR0ExVUVDd3dQUVdkbmNtVm5hVzl1SUVOdmNuQXVNUll3RkFZRApWUVFEREExaFoyZHlaV2RwYjI0dVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUE3RlgyY3N2cExacCt2Vk9NOEc3MTA1TkJXcEpDajNqb1V3dFdlOFVzUkxEL1FxMjVUMGdsZFN4STFvazAKMU5nMitqdXVBK2Z2WklaM0tkdmxFRFRVbCtJV2JDcXdyZ3k4VkJYRzg1QXJRcFNFbGZJeERUaXl3V2o2OURkdgpCYmZxOFRSNGdLNFBSdkJtQlF1ZWVpVlB0NktoU2JZTk55VmhuQWZRRVlNb2t3L3NrRSszenkrZVNQU3FNbkZICjNKYlB3V3JTVHlyMTNDMi9uMXk1UTdHZEE1dnF2SFFUTWRkUlRxYTV0aGc1TUR0TFFmbXJMcTVkTEkzMlU1NisKKzJLcUhXMmxMZVRROGdJSVdrRDJjMlk0ZVRMd3hVY0N2eTR3RGJSUE9zU1ptb2FtQ3hZb2JvL0NGVVlHRWVmMwoyajJOVWdRWFUwK04yUzF3U1U5NDlOb052UUlEQVFBQm80R2VNSUdiTUZnR0ExVWRJd1JSTUUraFFxUkFNRDR4CkhEQWFCZ05WQkFNTUUyeHZZMkZzTG1GblozSmxaMmx2Ymk1amIyMHhDekFKQmdOVkJBWVRBbFZUTVJFd0R3WUQKVlFRSERBaE9aWGNnV1c5eWE0SUpBSUt0cE5oRHVlYytNQWtHQTFVZEV3UUNNQUF3Q3dZRFZSMFBCQVFEQWdUdwpNQ2NHQTFVZEVRUWdNQjZDSEhKbFoybHpkSEo1TG14dlkyRnNMbUZuWjNKbFoybHZiaTVqYjIwd0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ0V2L0kvOW5ydTBNbHhlT2YxM01SaWthTWRPRnZSSVJtbVpld2V2N1AySGpIa3YKYlNmeVpvQUJpbkFVK2RGK0dQZU93Sk81TUhBVzZ0NS9iemcxakNBVW1VeXhkT0dnOGV3bkt4bEJkbW5YVy9KKwpweGplMTNmcVNOM3hwZVEvYlpSOElvRXIvREp1Vnd3WXh5clYyMksxay9IOVFZR2IycFhIdkU4RG1tRWdTbnlLClNpMThRNXljREhwYlRCMC9pa3FicXJsWFpPbGh6ZU4wWTdmL1J2VEpGd0dacmVkZU92SlJkYWI3TG1FVHNuRTAKbHdQVWh2YnlGeVp0a1pJeE8xbGM2VzBzN3RPY3BHaHMwOThUZm9rTzMrRERYS1ZDUmp3WnpiYnhHQTBxL2dBcwpEWnlUNHBMSFg4dVhJWm11MDVVNTJUZHE4RHhxT2ZUMWR4TXdZNlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tlsKey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN0ZYMmNzdnBMWnArdlZPTThHNzEwNU5CV3BKQ2ozam9Vd3RXZThVc1JMRC9RcTI1ClQwZ2xkU3hJMW9rMDFOZzIranV1QStmdlpJWjNLZHZsRURUVWwrSVdiQ3F3cmd5OFZCWEc4NUFyUXBTRWxmSXgKRFRpeXdXajY5RGR2QmJmcThUUjRnSzRQUnZCbUJRdWVlaVZQdDZLaFNiWU5OeVZobkFmUUVZTW9rdy9za0UrMwp6eStlU1BTcU1uRkgzSmJQd1dyU1R5cjEzQzIvbjF5NVE3R2RBNXZxdkhRVE1kZFJUcWE1dGhnNU1EdExRZm1yCkxxNWRMSTMyVTU2KysyS3FIVzJsTGVUUThnSUlXa0QyYzJZNGVUTHd4VWNDdnk0d0RiUlBPc1NabW9hbUN4WW8KYm8vQ0ZVWUdFZWYzMmoyTlVnUVhVMCtOMlMxd1NVOTQ5Tm9OdlFJREFRQUJBb0lCQVFEZ2ZrT05CaThvRjRKZQplemY4eDVvUmNPWjZqMFpVbktnckFqRVRmdGN2Sk9aRVExc3NlVDdEajk1Y2s1YXd1L1YxT3kxd0htZmpHR3VuClFtN1ROeXZlWG0rb0xlRUlZNmFkUk5ab1ZFRVRqSnBwQ05jWlZRdFA5MVd5bDltSkdBdy9OUFZtWG5DNmxPNkQKeW1hdVpqVFVIZEtSZnpJTWVTREFJeGU5R3RaMjRhemlDbVpEdGNEZXlNdEgwZ08wSGFWbDU2Zll4aHU0UCsrLwpRS3c1QVlZd3ZrdWtVNy9xR0Y2UXBuSGVjK09DYUkwWDNFQStQbE9Ic2lzZ0ZBMmxzaW9oSFFmNENHNVBCSTZ5CkhKVElVeGh5aU9GOEE0TUpQY2ZINkt3dnJmWUFmSUk4dVhvbWRiQUxIKzMwWURzQmZXblFjbzJoOUlWbVdJQVAKNW5VbTMzU05Bb0dCQVA2N0RJUVJOV1pleDdGUEsrZWh2QVZMNjRKY04zRkdtelIxVmVpTlozTHFMUUtzaVBSWgp5WEgyTVd4dnpiOUxaUzRlTklLZm9jT05wRGlZM0pJZjNMWHBSSWtYVGlrUmc0RkZoVUhqamJ1R3BhQVgyWHo3CnJtR3pnUkxobEtFK0FvUnl2cVh1ZmhQMTdNSkJEMFgwV0dsbXVtdkRjek5mNkYvMkFSbW9nMjN6QW9HQkFPMkQKY3JhOHg5cHc2UzUxckpaUFFReFFmYTVHS3IxREQ3L1ZSb2RQU0crK1M2YU1Ib0dWZUxmbWx3VXFxbkt5UENEbAppYnhvblNCSHk5WnJJTXljZmM3cXRQYURxeDc4aURtOEtaT3ZVVFZSVTJMQ2E3N3QyUlF2QzFlbS9Ja1IxdlAvCld0dVBQNEE4RDMrL0d2N0Q4RUVsTzJSZ2RVeUdoekR6UzVhS2M1R1BBb0dBRUttdHJPbnZRMDRKNUFoWXgrTWwKaUhjcDViSWdrbEZiRDdocE1UZ212emFnVVI5MktmM0JscW5URzlQSWNxMzg1V0ptYnZFQVJPbDhCNVBBUWZMQgpua2l2Q2dTelFTNTdHcmF3ZTlubHlKR0xQZ2l4V21LZ1NwWFNhS2pHN3pFK091bkNuTm9YOXpoTUQzendBZFIxCkFCZ1BNOE5xUXI4UVZVNmpUY2xmSjQ4Q2dZQllpWDJEblErcTRCZ3NWM1ZFZXJxMnluSnZPbnpJSEcyTWh3WkoKZmtaMFVTMkdJZ2xsS01EZFhMbkRGVXFBZ3V4akh1MmZMQ2dXVm0wbnVydDVTb1NqVTE2dDNoczE2OUVrSkg0agpMV0ZLVE15V3JmN1lKM1dhVG9jZDM0T1gzT3lSL0FoMGZBdWgwOEc3VHhQVEVGdEpEWVg4UHZDNjNCTWRMalJwCkk2YzlCUUtCZ1FDeUlJbnVyLzFTeWpsY2VDWnVRRGRja1ExNk8yTk5idVRmdGNPbE0xNm9ab084QlpibEg2SncKd0RIOXZXMFpjNDcwZ2FuQnJVQmNNR3hWQUticDNCNlhwN1UxNzBsbVZvQm5MdmprbS9jMnVwK3A2Wm5jNURnWgphQmtMdjZoVk5zb2dKWkJiUUVON0NPU1NXUlZXU2hOZ1djQzk4UkpMWHk2dVQxME1WS1RrMlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
  auth:
    enabled: true
    login: guest0001
    password: boud6oseybpyRyft=

daemonset:
  enabled: true
  image: ubuntu:latest
  # command: echo "$TRUSTED_CERT" | base64 -d > /etc/pki/ca-trust/source/anchors/local.aggregion.com-ca.crt && update-ca-trust
  command: echo "$TRUSTED_CERT" | base64 -d > /usr/local/share/ca-certificates/local.aggregion.com-ca.crt && update-ca-certificates
  pauseImage: k8s.gcr.io/pause:3.1
