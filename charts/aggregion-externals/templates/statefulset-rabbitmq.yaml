{{- if .Values.rabbit.enabled }}
{{- $rabbitName := include "exts.rabbit.fullname" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ $rabbitName }}"
  labels:
    {{- include "exts.rabbit.labels" . | nindent 4 }}
spec:
  replicas: 1 # force 1 instance
  serviceName: "{{ $rabbitName }}"
  selector:
    matchLabels:
      {{- include "exts.rabbit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.rabbit.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "exts.rabbit.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "exts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.rabbit.podSecurityContext | nindent 8 }}
      containers:
        - name: "rabbitmq"
          securityContext:
            {{- toYaml .Values.rabbit.securityContext | nindent 12 }}
          image: "{{ .Values.rabbit.image.repository }}:{{ .Values.rabbit.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.rabbit.image.pullPolicy }}
          ports:
            - name: service
              containerPort: {{ .Values.rabbit.listenPort }}
              protocol: TCP
            - name: front
              containerPort: {{ .Values.rabbit.listenFrontPort }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |
                set_response=$( rabbitmq-diagnostics -q check_running );
                if [ "$set_response" == *"booted and running"* ]; then
                  exit 0;
                else
                  exit 1;
                fi
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - |
                set_response=$( rabbitmq-diagnostics -q ping );
                if [ "$set_response" == "Ping succeeded" ]; then
                  exit 0;
                else
                  exit 1;
                fi
            initialDelaySeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
              subPath: rabbit-data
          resources:
            {{- toYaml .Values.rabbit.resources | nindent 12 }}
      restartPolicy: {{ .Values.rabbit.restartPolicy }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ $rabbitName }}-claim"
      {{- with .Values.rabbit.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rabbit.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rabbit.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
