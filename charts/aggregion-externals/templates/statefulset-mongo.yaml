{{- if .Values.mongo.enabled }}
{{- $mongoName := include "exts.mongo.fullname" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ $mongoName }}"
  labels:
    {{- include "exts.mongo.labels" . | nindent 4 }}
spec:
  replicas: 1 # force 1 instance
  serviceName: "{{ $mongoName }}"
  selector:
    matchLabels:
      {{- include "exts.mongo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.mongo.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "exts.mongo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "exts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.mongo.podSecurityContext | nindent 8 }}
      containers:
        - name: "mongo"
          securityContext:
            {{- toYaml .Values.mongo.securityContext | nindent 12 }}
          image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
          ports:
            - name: service
              containerPort: {{ .Values.mongo.listenPort }}
              protocol: TCP          
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                set_response=$(mongo --quiet --eval "rs.status().ok")
                if [ $set_response -eq 0 ] ; then
                  exit 0
                else
                  exit 1
                fi
            initialDelaySeconds: 5
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                set_response=$(mongo test --quiet --eval "db.stats().ok")
                if [ $set_response -eq 1 ] ; then
                  exit 0
                else
                  exit 1
                fi
            initialDelaySeconds: 20
            timeoutSeconds: 5          
          volumeMounts:
            - name: data
              mountPath: /data/db
              subPath: mongo-data
          resources:
            {{- toYaml .Values.mongo.resources | nindent 12 }}
      restartPolicy: {{ .Values.mongo.restartPolicy }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ $mongoName }}-claim"
      {{- with .Values.mongo.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongo.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongo.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
