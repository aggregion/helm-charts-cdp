{{- if .Values.backend.enabled }}
{{- $backendName := include "cdp.backend.fullname" . }}
{{- $eosWalletPath := printf "%s/%s" (substr 0 3 .Values.backend.configs.eosOrgId) .Values.backend.configs.eosOrgId }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $backendName }}"
  {{- with .Values.backend.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "cdp.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cdp.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cdp.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.backend.restartPolicy }}
      serviceAccountName: {{ include "cdp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.backend.configs.migrationEnabled }}
        - name: "backend-migration"
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          args:
            - npm
            - run
            - migrate:up
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          resources:
            {{- toYaml .Values.backend.resources.migration | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume
        {{- end }}

      containers:
        - name: "backend-api"
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          {{- if not .Values.gatekeeper.enabled }}
          ports:
            - name: httpapi
              containerPort: {{ .Values.backend.configs.listenPort }}
              protocol: TCP
          {{- end }}
          args:
            - npm
            - run
            {{- if .Values.backend.configs.debugEnabled }}
            - start:api:debug
            {{- else }}
            - start:api
            # - --ignore-scripts
            {{- end }}
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          {{- if .Values.backend.probes.api.livenessEnabled }}
          {{- include "cdp.livenessProbe" . | indent 10 }}
          {{- end }}
          {{- if .Values.backend.probes.api.readinessEnabled }}
          {{- include "cdp.readinessProbe" . | indent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources.api | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume
            - mountPath: "/home/node/app/eos-wallet/{{ $eosWalletPath }}.wallet"
              subPath: "account.wallet"
              name: local-config-volume
            - name: data
              mountPath: /data/datalabscripts
              subPath: datalabscripts-data
        {{- if .Values.gatekeeper.enabled }}
        - name: "gatekeeper"
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.gatekeeper.image.repository }}:{{ .Values.gatekeeper.image.tag }}"
          imagePullPolicy: {{ .Values.gatekeeper.image.pullPolicy }}
          args:
            - --config
            - /etc/gatekeeper/config.yaml
          ports:
            - name: httpapi
              containerPort: {{ int .Values.gatekeeper.config.listen }}
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: gatekeeper-config
              mountPath: /etc/gatekeeper
        {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ $backendName }}-claim"
        - name: tmp
          hostPath:
            path: "/tmp/{{ $backendName }}"
        - name: local-config-volume
          configMap:
            name: "{{ $backendName }}-config-files"
            items:
              - key: local.json
                path: local.json
              - key: "account.wallet"
                path: "account.wallet"
        {{- if .Values.gatekeeper.enabled }}
        - name: gatekeeper-config
          secret:
            secretName: "{{ include "cdp.backend.fullname" . }}-gatekeeper-secrets"
        {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.backend.updateStrategy }}
  strategy:
    {{- toYaml .Values.backend.updateStrategy | nindent 4 }}
  {{- end }}
{{- end }}
