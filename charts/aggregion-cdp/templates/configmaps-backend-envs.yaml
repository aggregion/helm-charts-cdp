{{- $backendName := include "cdp.backend.fullname" . }}
{{- $enclaveName := include "cdp.enclave.fullname" . }}
{{- $dataserviceName := include "cdp.dataservice.fullname" . }}
{{- $authserviceName := include "cdp.authservice.fullname" . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $backendName }}-config
  labels:
    {{- include "cdp.backend.labels" . | nindent 4 }}
data:
  API_ENDPOINT: "http://{{ $backendName }}:{{ .Values.backend.service.api.port }}/graphql"
  REACT_APP_CURRENCY: "{{ .Values.frontend.configs.currency }}"
  ATLAS_URL: "{{ .Values.backend.configs.atlasUrl }}"
  FILES_ENDPOINT: "http://{{ $backendName }}:{{ .Values.backend.service.api.port }}/"
  SERVER_PORT: "{{ .Values.backend.configs.listenPort }}"
  LOG_LEVEL: "{{ .Values.backend.configs.logLevel }}"
  ALARM_NOTIFICATION_EMAIL: "{{ .Values.backend.configs.alarmEmail }}"
  CLICKHOUSE_HOST: "{{ .Values.backend.configs.clickhouseHost }}"
  CLICKHOUSE_PORT: "{{ .Values.backend.configs.clickhousePort }}"
  CLICKHOUSE_DB: "{{ .Values.backend.configs.clickhouseDb }}"
  CLICKHOUSE_USER: "{{ .Values.backend.configs.clickhouseUser }}"
  CLICKHOUSE_PASSWORD: "{{ .Values.backend.configs.clickhousePassword }}"
  EOS_NODE_URL: "{{ .Values.backend.configs.eosNodeUrl }}"
  EOS_WALLET_ORG_ID: "{{ .Values.backend.configs.eosWalletOwnerOrgId }}"
  EOS_WALLET_PUBLIC_KEY: "{{ .Values.backend.configs.eosWalletOwnerPub }}"
  ENCLAVE_LOCAL_PROVIDER_NAME: "{{ .Values.backend.configs.providerName }}"
  CURRENT_PROVIDER_NAME: "{{ .Values.backend.configs.providerName }}"
  PROVIDER_INSTANCE_ID: "{{ .Values.backend.configs.providerInstanceId }}"
  INTERACTION_INITIALIZATION_VECTOR: "{{ .Values.backend.configs.interactionIV }}"
  ENCLAVE_ENDPOINT: "{{ .Values.backend.configs.enclaveEndpoint | default (printf "http://%s:%v" $enclaveName .Values.enclave.service.innerPort) }}"
  ENCLAVE_DMP_API_SECRET: "{{ .Values.backend.configs.dmpSecret }}"
  ENCLAVE_KNOWN_PROVIDERS: '{{ .Values.providers | toJson }}'
  EMAIL_NOTIFICATIONS: '{{ .Values.backend.configs.email | toJson }}'
  CALC_REPORT_DEFAULT_GOODS_DIRECTORY: "{{ .Values.backend.configs.reportDefaultGoodsDirectory }}"
  DICTS_BRANDS: "{{ .Values.backend.configs.dictMode }}"
  DICTS_VENDORS: "{{ .Values.backend.configs.dictMode }}"
  SUPPORT_EMAIL: "{{ .Values.backend.configs.supportEmail }}"
  BASE_URL: "{{ .Values.backend.configs.baseUrl }}"
  DATA_SERVICE_ENDPOINT: "http://{{ $dataserviceName }}:{{ .Values.dataservice.service.port }}/api/"
  DATA_SERVICE_TOKEN: "{{ .Values.dataservice.config.accessToken }}"
  AUTH_SERVICE_ENDPOINT: "http://{{ $authserviceName }}:{{ .Values.authservice.service.port }}/api/"
  DEPLOY_CONTROLLER_USE_EXTERNAL_S3: "{{ .Values.backend.configs.dcUseExternalS3 }}"
  WEBHOOK_TOKEN_EXPIRATION_TIME: "{{ .Values.backend.configs.webhookTokenExpirationTime }}"
  METADATA_SEED_API_URL: "{{ .Values.backend.configs.metadataSeedApiUrl }}"
  CACHE_TTL_MARKETPLACE: "{{ .Values.backend.configs.cacheTtlMarket }}"
  CACHE_TTL_MATCHING: "{{ .Values.backend.configs.cacheTtlMatching }}"
  MAX_RUNNING_DATALAB_VMS: "{{ .Values.backend.configs.datalabMaxVms }}"
  GRAPHQL_PLAYGROUND_ENABLED: "{{ .Values.backend.configs.graphQLPlayground.enabled }}"
