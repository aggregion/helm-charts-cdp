{{- if and (.Values.backend.enabled) (.Values.backend.configs.serviceBlockchainUpdaterEnabled) (eq .Values.backend.configs.serviceBlockchainUpdaterOldStyle false) }}
{{- $name := "backend" }}
{{- $backendName := include "cdp.backend.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $backendName }}-bc-updater"
  {{- with .Values.backend.annotations }}
  annotations:
      {{- toYaml . | nindent 6 }}
  {{- end }}
  labels:
    {{- include "cdp.backend.labels" . | nindent 4 }}
    app.kubernetes.io/component: "bc-updater"
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cdp.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cdp.backendBcUpdater.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.backend.restartPolicy }}
      serviceAccountName: {{ include "cdp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}

      containers:
        - name: "backend-blockchain-updater-datasetrequests"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: "Always"
          args:
            - npm
            - run
            - start:worker:blockchain_updaters_datasetrequests
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          env:
            - name: HEALTHCHECK_PORT
              value: "9047"
          {{- if .Values.backend.probes.bcDatasetRequestsUpdater.livenessEnabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.livenessPath }}
              port: 9047
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          {{- if .Values.backend.probes.bcDatasetRequestsUpdater.readinessEnabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.readinessPath }}
              port: 9047
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources.blockchainUpdater | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume
        - name: "backend-blockchain-updater-interactions"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: "Always"
          args:
            - npm
            - run
            - start:worker:blockchain_updaters_interactions
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          env:
            - name: HEALTHCHECK_PORT
              value: "9048"
          {{- if .Values.backend.probes.bcInteractionsUpdater.livenessEnabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.livenessPath }}
              port: 9048
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          {{- if .Values.backend.probes.bcInteractionsUpdater.readinessEnabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.readinessPath }}
              port: 9048
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources.blockchainUpdater | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume
        - name: "backend-blockchain-updater-projects"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: "Always"
          args:
            - npm
            - run
            - start:worker:blockchain_updaters_projects
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          env:
            - name: HEALTHCHECK_PORT
              value: "9049"
          {{- if .Values.backend.probes.bcProjectsUpdater.livenessEnabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.livenessPath }}
              port: 9049
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          {{- if .Values.backend.probes.bcProjectsUpdater.readinessEnabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.readinessPath }}
              port: 9049
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources.blockchainUpdater | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume
        - name: "backend-blockchain-updater-scripts"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: "Always"
          args:
            - npm
            - run
            - start:worker:blockchain_updaters_scripts
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          env:
            - name: HEALTHCHECK_PORT
              value: "9050"
          {{- if .Values.backend.probes.bcScriptsUpdater.livenessEnabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.livenessPath }}
              port: 9050
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          {{- if .Values.backend.probes.bcScriptsUpdater.readinessEnabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.probes.common.readinessPath }}
              port: 9050
            timeoutSeconds: 3
            initialDelaySeconds: 5
            periodSeconds: 15
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources.blockchainUpdater | nindent 12 }}
          volumeMounts:
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume

      volumes:
        - name: local-config-volume
          configMap:
            name: "{{ $backendName }}-config-files"
            items:
              - key: local.json
                path: local.json

      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.backend.updateStrategy }}
  strategy:
    {{- toYaml .Values.backend.updateStrategy | nindent 4 }}
  {{- end }}
{{- end }}
