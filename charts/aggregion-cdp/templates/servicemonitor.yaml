{{- if and .Values.metrics.enabled .Values.metrics.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    serviceMonitorSelector: prometheus
  name: "sm-{{ include "cdp.backend.fullname" . }}"
  namespace: monitoring
spec:
  endpoints:
    {{- if and .Values.backend.configs.servicePipelineDebugHasherStatusWatcherEnabled .Values.backend.probes.debugHasherStatusWatcher.livenessEnabled }}
    - interval: 30s
      port: "debug-hasher"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.servicePipelineDebugCleanroomStatusWatcherEnabled .Values.backend.probes.cleanroomStatusWatcher.livenessEnabled }}
    - interval: 30s
      port: "cleanroom"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.enabled .Values.backend.probes.api.livenessEnabled }}
    - interval: 30s
      port: "backend-api"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceDatasetUploaderEnabled .Values.backend.probes.datasetUploader.livenessEnabled }}
    - interval: 30s
      port: "dataset-uploader"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceJobSchedulerEnabled .Values.backend.probes.jobScheduler.livenessEnabled }}
    - interval: 30s
      port: "job-scheduler"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceBlockchainUpdaterEnabled .Values.backend.probes.bcDatasetRequestsUpdater.livenessEnabled }}
    - interval: 30s
      port: "bc-datasetrequests-updater"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceBlockchainUpdaterEnabled .Values.backend.probes.bcInteractionsUpdater.livenessEnabled }}
    - interval: 30s
      port: "bc-interactions-updater"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceBlockchainUpdaterEnabled .Values.backend.probes.bcProjectsUpdater.livenessEnabled }}
    - interval: 30s
      port: "bc-projects-updater"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.backend.configs.serviceBlockchainUpdaterEnabled .Values.backend.probes.bcScriptsUpdater.livenessEnabled }}
    - interval: 30s
      port: "bc-scripts-updater"
      path: {{ .Values.backend.configs.metrics.path }}
    {{- end }}
    {{- if and .Values.authservice.enabled .Values.authservice.probes.livenessEnabled }}
    - interval: 30s
      port: "auth-service"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.enabled .Values.dataservice.probes.api.livenessEnabled }}
    - interval: 30s
      port: "dataservice"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.datasetLogsSyncers.enabled .Values.dataservice.probes.datasetLogs.livenessEnabled }}
    - interval: 30s
      port: "dataset-logs"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.datasetDatasetSyncer.enabled .Values.dataservice.probes.datasetSyncer.livenessEnabled }}
    - interval: 30s
      port: "dataset-syncer"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.datasetDatasetUpdater.enabled .Values.dataservice.probes.datasetUpdater.livenessEnabled }}
    - interval: 30s
      port: "dataset-updater"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.datasetInstanceSyncer.enabled .Values.dataservice.probes.instanceSyncer.livenessEnabled }}
    - interval: 30s
      port: "instance-syncer"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and
      .Values.dataservice.glossarySyncers.enabled
      .Values.dataservice.glossaryContainers.glossarySyncer.enabled
      .Values.dataservice.probes.glossary.livenessEnabled
    }}
    - interval: 30s
      port: "glossary-syncer"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and
      .Values.dataservice.glossarySyncers.enabled
      .Values.dataservice.glossaryContainers.glossaryUpdater.enabled
      .Values.dataservice.probes.glossary.livenessEnabled
    }}
    - interval: 30s
      port: "glossary-updater"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and
      .Values.dataservice.glossarySyncers.enabled
      .Values.dataservice.glossaryContainers.glossaryTermSyncer.enabled
      .Values.dataservice.probes.glossary.livenessEnabled
    }}
    - interval: 30s
      port: "glossary-term-syncer"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and
      .Values.dataservice.glossarySyncers.enabled
      .Values.dataservice.glossaryContainers.glossaryTermUpdater.enabled
      .Values.dataservice.probes.glossary.livenessEnabled
    }}
    - interval: 30s
      port: "glossary-term-updater"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.dataservice.configAtlasSyncer.enabled .Values.dataservice.probes.atlasEntitySyncer.livenessEnabled }}
    - interval: 30s
      port: "atlas-entity-syncer"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.emailservice.enabled .Values.metrics.enabled }}
    - interval: 30s
      port: "email-service"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.metadataSeed.enabled .Values.metrics.enabled }}
    - interval: 30s
      port: "metadata-seed"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.oidcprovider.enabled .Values.metrics.enabled }}
    - interval: 30s
      port: "oidc-provider"
      path: {{ .Values.metrics.path }}
    {{- end }}
    {{- if and .Values.metadataService.enabled .Values.metadataService.config.metrics.enabled }}
    - interval: 30s
      port: "metadata-svc"
      path: {{ .Values.metrics.path | quote }}
    {{- end }}
    {{- if and .Values.dbMetadataSync.enabled .Values.dbMetadataSync.config.metrics.enabled }}
    - interval: 30s
      port: "metadata-sync"
      path: {{ .Values.metrics.path | quote }}
    {{- end }}
  namespaceSelector:
    matchNames:
      - {{ .Values.backend.configs.datalabDmpNamespace }}
  selector:
    matchLabels:
      operated-prometheus: "true"
{{- end }}
