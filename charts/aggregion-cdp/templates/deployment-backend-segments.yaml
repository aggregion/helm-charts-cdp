{{- if and (.Values.backend.enabled) (.Values.backend.configs.serviceSegmentsEnabled) }}
{{- $name := "backend" }}
{{- $backendName := include "cdp.backend.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $backendName }}-segments"
  {{- with .Values.backend.annotations }}
  annotations:
      {{- toYaml . | nindent 6 }}
  {{- end }}
  labels:
    {{- include "cdp.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cdp.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cdp.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.backend.restartPolicy }}
      serviceAccountName: {{ include "cdp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}

      containers:
        - name: "backend-segments"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: "Always"
          args:
            - npm
            - run
            - start:worker:segments
          envFrom:
            - configMapRef:
                name: "{{ $backendName }}-config"
            - secretRef:
                name: "{{ $backendName }}-secrets"
          resources:
            {{- toYaml .Values.backend.resources.segments | nindent 12 }}
          env:
            - name: "HEALTH_CHECK_PORT"
              value: "8309"
          # livenessProbe:
          #   httpGet:
          #     path: /healthcheck
          #     port: 8309
          #   failureThreshold: 5
          #   periodSeconds: 30
          #   timeoutSeconds: 20
          volumeMounts:
            - mountPath: /tmp/segment
              name: tmp
            - mountPath: /home/node/app/config/local.json
              subPath: local.json
              name: local-config-volume

      volumes:
        - name: tmp
          hostPath:
            path: "/tmp/{{ $backendName }}"
        - name: local-config-volume
          configMap:
            name: "{{ $backendName }}-config-files"
            items:
              - key: local.json
                path: local.json

      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.backend.updateStrategy }}
  strategy:
    {{- toYaml .Values.backend.updateStrategy | nindent 4 }}
  {{- end }}
{{- end }}
