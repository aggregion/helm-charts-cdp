{{- if .Values.dataservice.enabled }}
{{- $dataServiceName := include "cdp.dataservice.fullname" . }}

{{- if .Values.dataservice.probes.api.livenessEnabled }}
{{- $component := "dataservice" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.metadataService.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- if .Values.dataservice.probes.datasetLogs.livenessEnabled }}
{{- $component := "dataset-logs" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.dataserviceDatasetLogs.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- if .Values.dataservice.probes.datasetSyncer.livenessEnabled }}
{{- $component := "dataset-syncer" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.dataserviceDatasetSyncer.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- if .Values.dataservice.probes.datasetUpdater.livenessEnabled }}
{{- $component := "dataset-updater" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.dataserviceDatasetUpdater.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- if .Values.dataservice.probes.instanceSyncer.livenessEnabled }}
{{- $component := "instance-syncer" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.dataserviceInstanceSyncer.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- if .Values.dataservice.probes.glossary.livenessEnabled }}
{{- $component := "glossary" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    {{- range $index, $val := .Values.dataservice.glossaryContainers }}
    {{- if $val.enabled }}
    {{- with $.Values.dataservice }}
    - protocol: TCP
      name: {{ $val.healthcheckPortName }}
      port: {{ $val.healthcheckPort }}
      targetPort: {{ $val.healthcheckPort }}
    {{- end -}}
    {{- end -}}
    {{- end }}
  selector:
    {{- include "cdp.dataserviceGlossary.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}

{{- if .Values.dataservice.probes.atlasEntitySyncer.livenessEnabled }}
{{- $component := "atlas-entity-syncer" }}
apiVersion: v1
kind: Service
metadata:
  name: "hc-{{ include "cdp.dataservice.fullname" . }}-{{ $component }}"
  annotations:
    prometheus.io/healthcheck: "true"
    prometheus.io/probe: "true"
  labels:
    operated-prometheus: "true"
spec:
  ports:
    - protocol: TCP
      name: {{ $component | quote }}
      port: {{ .Values.dataservice.probes.common.healthcheckPort }}
      targetPort: {{ .Values.dataservice.probes.common.healthcheckPort }}
  selector:
    {{- include "cdp.dataserviceAtlasEntitySyncer.selectorLabels" . | nindent 4 }}
  type: ClusterIP
---
{{- end -}}


{{- end }}
