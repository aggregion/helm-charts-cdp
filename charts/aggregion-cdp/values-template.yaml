# requirements: gettext
atlas:
  auth:
    basic:
      password: admin
      username: admin
    bearer:
      clientId: atlas
      clientSecret: atlasclientsecret
      tokenUrl: https://keycloak/realms/aggregion/protocol/openid-connect/token # CHANGEIT
    type: basic
  baseUrl: http://atlas:21000 # CHANGEIT
authservice:
  enabled: true
  config:
    jwtSecretKey: "$AUTH_SERVICE_JWT_SECRET_KEY" # GENERATED
    logLevel: info
    mongoDbUri: mongodb://externals-mongo:27017/auth-service
backend:
  configs:
    accountName: "$ACCOUNT_ID"
    baseUrl: http://app.beeline.training.aggregion.com
    clickhouseDb: somedatabase # CHANGEIT
    clickhouseHost: 127.0.0.1 # CHANGEIT
    clickhousePassword: somepass # CHANGEIT
    clickhousePort: 8123 # CHANGEIT
    clickhouseUser: ekjrkaBHEKFQPblerufh # CHANGEIT
    datalabApiUrl: http://aggregion-dc-dc-dc.dc.svc.cluster.local:8080 # CHANGEIT
    datalabAuthUrl: http://aggregion-cdp-backend-cdp.namespace.svc.cluster.local:8080/auth/datalab/vm/check-request # CHANGEIT
    datalabCpuLimit: "8"
    datalabDmpNamespace: namespace # CHANGEIT
    datalabMemoryLimitGb: "64"
    datalabNamespace: datalab
    datalabOverwriteDomain: app.beeline.training.aggregion.com
    datalabPassword: admin
    datalabPlatformId: platform
    datalabWebhookUrl: http://aggregion-cdp-backend-cdp-stage1.namespace.svc.cluster.local:8080/webhooks # CHANGEIT
    dmpSecret: "$BACKEND_CONFIGS_DMP_SECRET" # GENERATED
    enclaveEndpoint: http://aggregion-cdp-enclave-cdp.namespace.svc.cluster.local:8010 # CHANGEIT
    eosDecryptPk: |-
      $PRIVATE_KEY_6S
    eosNodeUrl: http://testnet.blockchain.dmp.aggregion.com:9999 # CHANGEIT
    eosWalletOwnerOrgId: "$ACCOUNT_ID"
    eosWalletOwnerPk: EOS_PRIVATE_KEY # CHANGEIT
    eosWalletOwnerPub: EOS_PUBLIC_KEY # CHANGEIT
    jwtSecret: c2VjcmV0
    metadataSeedApiUrl: http://cdp-metadataseed.namespace.svc.cluster.local # CHANGEIT
    migrationEnabled: true
    mongoUrl: mongodb://externals-mongo.namespace.svc.cluster.local:27017/dmpdemo # CHANGEIT
    pipelineRunner:
      debugMode: false
      pipelines:
        cleanroom:
          namespace: pipelines
          pipelineName: debug-cleanroom-pipelines # CHANGEIT
          pvcSize: 20Gi
          serviceAccountName: pipeline-services-runner-sa # CHANGEIT
          statusQueue: pipeline_cleanroom_event_status
          storageClassName: longhorn
          timeout: 24h0m0s
    providerInstanceId: "$ACCOUNT_ID"
    providerName: "$ACCOUNT_ID"
    rabbitmqUrl: amqp://externals-rabbit.namespace.svc.cluster.local:5672 # CHANGEIT
    redisHost: externals-redis.namespace.svc.cluster.local # CHANGEIT
    redisPassword: ""
    redisPort: 6379
    redisPrefix: 'agg:'
    serviceBlockchainUpdaterEnabled: true
    serviceDatasetUploader: true
    serviceJobSchedulerEnabled: true
    serviceMatchingStatusResponseWatcherEnabled: true
    serviceMatchingStatusWatcherEnabled: true
    servicePanelSegmentUploader: false
    serviceSegmentsEnabled: true
    webhookTokenExpirationTime: 3600000
    metadataServiceToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJ0eXBlIjogIiIsCiAgInNlcnZpY2UiOiAiYmFja2VuZC1hcGkiLAogICJpYXQiOiAxNjc5MzIwMDgwLAogICJpc3MiOiAiYWdncmVnaW9uIgp9.DTFsatiLLK9zC-0txcdJUpAu90L16NqPiszHSQkqAF4 # CHANGEIT2
cleos:
  enabled: false
dataservice:
  config:
    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiRGF0YSBBY2Nlc3MgVG9rZW4gZm9yIHRoZSBhdXRob3JpemF0aW9uIGluIHRoZSBsb2NhbCBwcm92aWRlciBlbnZpcm9ubWVudCIsImlhdCI6MTY0NDc0MTkzMywiaXNzIjoic3RhZ2UxIn0.ZoGn0GHP5KRpsM47dA_tA7sFRqb8uu4YQFTg51JDkEI # CHANGEIT2
    bcmqPollingInterval: 200
    endpoint: http://cdp-dataservice-cdp.namespace.svc.cluster.local/api # CHANGEIT
    logLevel: trace
    logPrettyPrint: false
    mongoDbUri: mongodb://externals-mongo-externals.namespace.svc.cluster.local:27017/ds-api # CHANGEIT
    mongoDebug: false
    nodeEnv: production
    port: 9045
    rabbitmqUri: amqp://externals-rabbit-externals.namespace.svc.cluster.local:5672 # CHANGEIT
    tokenIssuer: "$ACCOUNT_ID"
    tokenSecretKey: CHANGEIT # CHANGEIT
    metadataServiceToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJ0eXBlIjogIiIsCiAgInNlcnZpY2UiOiAiZGItbWV0YWRhdGEtc3luYyIsCiAgImlhdCI6IDE2NzkzMTk4MTUsCiAgImlzcyI6ICJhZ2dyZWdpb24iCn0.azuGQRZ9Kls_mfkvML_QDDkgnDn3rWJ44YV6fA4A1GU # CHANGEIT2
  configAtlasSyncer:
    enabled: false
  enabled: true
  glossaryContainers:
    glossarySyncer:
      enabled: false
    glossaryUpdater:
      enabled: false
  glossarySyncers:
    enabled: true
  imageJobRunner:
    pullPolicy: IfNotPresent
    repository: curlimages/curl
    tag: latest
  probes:
    api:
      livenessEnabled: true
      readinessEnabled: true
  datasetLogsSyncers:
    enabled: true
  datasetDatasetSyncer:
    enabled: true
  datasetDatasetUpdater:
    enabled: true
  datasetInstanceSyncer:
    enabled: true
emailservice:
  enabled: true
  probes:
    livenessEnabled: true
    readinessEnabled: true
enclave:
  configs:
    dataserviceBaseURL: http://aggregion-cdp-dataservice-cdp-stage1.namespace.svc.cluster.local # CHANGEIT
    dataserviceToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiZW5jbGF2ZSIsInNlcnZpY2UiOiJlbmNsYXZlIiwiaWF0IjoxNjQ0NzQxOTMzLCJpc3MiOiJzdGFnZTEifQ.Ed0VKbh9jsByPKcPO5dmZ_0EH3viLFhyeADMhY20_cw # CHANGEIT2
    workerHeapSizeMb: 64000
  enabled: true
  imageServices:
    pullPolicy: IfNotPresent
    repository: registry.aggregion.com/enclave-external-services
    tag: latest
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 128000m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    enabled: true
    hosts:
      - host: enclave.beeline.training.aggregion.com
        paths:
          - /
    tls:
      - hosts:
          - enclave.beeline.training.aggregion.com
        secretName: ingress-beeline-training-aggregion-com
frontend:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    enabled: true
    hosts:
      - host: app.beeline.training.aggregion.com
    tls:
      - hosts:
          - app.beeline.training.aggregion.com
        paths:
          backend:
            service:
              name: aggregion-cdp-backend
              port:
                name: httpapi
          pathType: Prefix
        secretName: ingress-dcp-cert
gatekeeper:
  config:
    clientId: dcp
    clientSecret: i7gjw338A51BPFsSNck9P10lQxhqHn4O
    discoveryUrl: https://kc19.beeline.training.aggregion.com/realms/stage1/.well-known/openid-configuration
    encryptionKey: "$GK_CONFIG_ENCRYPTION_KEY"
    redirectionUrl: https://app.beeline.training.aggregion.com
    signInPage: ""
    storeUrl: ""
    verbose: true
  enabled: true
  image:
    repository: registry.aggregion.com/gatekeeper
    tag: 1.4.2
imagePullSecrets:
  - name: aggregionregistry
metadataSeed:
  enabled: false
oidcprovider:
  config:
    clientPostLogoutRedirectUris:
      - https://kc19.beeline.training.aggregion.com/realms/stage1/broker/aggregion-oidc/endpoint/logout_response
    clientRedirectUris:
      - https://kc19.beeline.training.aggregion.com/realms/stage1/broker/aggregion-oidc/endpoint
    logLevel: info
    successSignupRedirectUri: https://app.beeline.training.aggregion.com
    ttl:
      accessToken: 1000000
  enabled: true
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod # CHANGEIT
    enabled: true
    hosts:
      - host: auth.beeline.training.aggregion.com
    tls:
      - hosts:
          - auth.beeline.training.aggregion.com
        secretName: auth-tls
  probes:
    livenessEnabled: true
    readinessEnabled: true
providerLinks:
  - name: "$ACCOUNT_ID"
    url: http://cdp-enclave.namespace.svc.cluster.local:8010 # CHANGEIT
providers:
  - "$ACCOUNT_ID"
providerNames:
  $ACCOUNT_ID:
    ru: Розничная сеть
    en: Retail network
metadataParams:
  credentials:
    encryptionKey: "$MD_PARAMS_CREDS_ENCRYPTION_KEY" # GENERATED
    iv: "$MD_PARAMS_CREDS_IV" # GENERATED
metadataService:
  enabled: true
  migrationEnabled: true
  probes:
    livenessEnabled: true
    readinessEnabled: true
  config:
    logLevel: "trace"
    dmpBackendBaseUrl: "http://cdp-backend.namespace.svc.cluster.local:8080/" # CHANGEIT
    jwtSecret: "iuerfiuebilualbwieufbwererfwef23fdf"
    postgres:
      host: "externals-postgres.namespace.svc.cluster.local" # CHANGEIT
      logging: true
    amqp:
      url: "amqp://externals-rabbit.namespace.svc.cluster.local:5672" # CHANGEIT
    metrics:
      enabled: true
  cronjob:
    enabled: true
dbMetadataSync:
  enabled: true
  probes:
    livenessEnabled: true
    readinessEnabled: true
  config:
    logLevel: "trace"
    metadataServiceToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJ0eXBlIjogIiIsCiAgInNlcnZpY2UiOiAiZGItbWV0YWRhdGEtc3luYyIsCiAgImlhdCI6IDE2NzkzMTk4MTUsCiAgImlzcyI6ICJhZ2dyZWdpb24iCn0.azuGQRZ9Kls_mfkvML_QDDkgnDn3rWJ44YV6fA4A1GU # CHANGEIT2
    instances:
      - name: ch
        rdbmsType: clickhouse
        connectionOptions:
          hostname: 127.0.0.1 # CHANGEIT
          port: 8123
        credentials:
          username: "someuser" # CHANGEIT
          password: "somepass" # CHANGEIT
        databases:
          - name: databasename # CHANGEIT
    metrics:
      enabled: true
  cronjob:
    enabled: true
metrics:
  enabled: false
  serviceMonitor:
    enabled: false
