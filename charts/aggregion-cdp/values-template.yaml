# requirements: gettext
atlas:
  auth:
    basic:
      password: admin
      username: admin
    bearer:
      clientId: atlas
      clientSecret: atlasclientsecret
      tokenUrl: https://keycloak/realms/aggregion/protocol/openid-connect/token # CHANGEIT
    type: basic
  baseUrl: http://atlas:21000 # CHANGEIT
authservice:
  enabled: true
  config:
    jwtSecretKey: "$AUTH_SERVICE_JWT_SECRET_KEY" # GENERATED
    logLevel: info
    mongoDbUri: mongodb://aggregion-externals-mongo-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:27017/auth-service
backend:
  configs:
    accountName: "$ACCOUNT_ID"
    baseUrl: $BASE_FRONT_URL_SCHEMA://$BASE_FRONT_DOMAIN
    clickhouseDb: somedatabase # CHANGEIT
    clickhouseHost: 127.0.0.1 # CHANGEIT
    clickhousePassword: somepass # CHANGEIT
    clickhousePort: 8123 # CHANGEIT
    clickhouseUser: ekjrkaBHEKFQPblerufh # CHANGEIT
    datalabApiUrl: http://aggregion-dc-dc-dc.$DC_NS.svc.$CLUSTER_DOMAIN:8080
    datalabAuthUrl: http://aggregion-cdp-backend-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8080/auth/datalab/vm/check-request
    datalabCpuLimit: "8"
    datalabDmpNamespace: $CDP_NS
    datalabMemoryLimitGb: "64"
    datalabNamespace: datalab
    datalabOverwriteDomain: $BASE_FRONT_DOMAIN
    datalabPassword: admin
    datalabPlatformId: platform
    datalabWebhookUrl: http://aggregion-cdp-backend-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8080/webhooks
    dmpSecret: "$BACKEND_CONFIGS_DMP_SECRET" # GENERATED
    enclaveEndpoint: http://aggregion-cdp-enclave-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8010
    eosDecryptPk: |-
      $PRIVATE_KEY_6S
    eosNodeUrl: http://testnet.blockchain.dmp.aggregion.com:9999 # CHANGEIT
    eosWalletOwnerOrgId: "$ACCOUNT_ID"
    eosWalletOwnerPk: $EOS_WALLET_PRIVATE_KEY
    eosWalletOwnerPub: $EOS_WALLET_PUBLIC_KEY
    jwtSecret: "$BACKEND_CONFIGS_JWT_SECRET" # GENERATED
    metadataSeedApiUrl: http://aggregion-cdp-metadataseed-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN
    migrationEnabled: true
    mongoUrl: mongodb://aggregion-externals-mongo-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:27017/dmp
    metrics:
      isEnabled: false
    pipelineRunner:
      debugMode: false
      pipelines:
        cleanroom:
          namespace: pipelines
          pipelineName: debug-cleanroom-pipelines # CHANGEIT
          pvcSize: 20Gi
          serviceAccountName: pipeline-services-runner-sa # CHANGEITs
          statusQueue: pipeline_cleanroom_event_status
          storageClassName: longhorn
          timeout: 24h0m0s
    providerInstanceId: "$ACCOUNT_ID"
    providerName: "$ACCOUNT_ID"
    rabbitmqUrl: amqp://aggregion-externals-rabbit-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:5672
    redisHost: aggregion-externals-redis-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN
    redisPassword: ""
    redisPort: 6379
    redisPrefix: 'agg:'
    serviceBlockchainUpdaterEnabled: true
    serviceDatasetUploader: true
    serviceJobSchedulerEnabled: true
    serviceMatchingStatusResponseWatcherEnabled: true
    serviceMatchingStatusWatcherEnabled: true
    servicePanelSegmentUploader: false
    serviceSegmentsEnabled: true
    webhookTokenExpirationTime: 3600000
    metadataServiceToken: NEED_GENERATING
cleos:
  enabled: false
dataservice:
  config:
    accessToken: NEED_GENERATING
    bcmqPollingInterval: 200
    endpoint: http://aggregion-cdp-dataservice-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN/api
    logLevel: trace
    logPrettyPrint: false
    mongoDbUri: mongodb://aggregion-externals-mongo-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:27017/ds
    mongoDebug: false
    nodeEnv: production
    port: 9045
    rabbitmqUri: amqp://aggregion-externals-rabbit-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:5672
    tokenIssuer: "$ACCOUNT_ID"
    tokenSecretKey: "$DATASERVICE_CONFIG_TOKENSECRETKEY" # GENERATED
    metadataServiceToken: NEED_GENERATING
    trinoHost: trino$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN
  configAtlasSyncer:
    enabled: true
  enabled: true
  glossaryContainers:
    glossarySyncer:
      enabled: true
    glossaryUpdater:
      enabled: true
  glossarySyncers:
    enabled: true
  imageJobRunner:
    pullPolicy: IfNotPresent
    repository: curlimages/curl
    tag: latest
  probes:
    api:
      livenessEnabled: true
      readinessEnabled: true
  datasetLogsSyncers:
    enabled: true
  datasetDatasetSyncer:
    enabled: true
  datasetDatasetUpdater:
    enabled: true
  datasetInstanceSyncer:
    enabled: true
emailservice:
  enabled: true
  probes:
    livenessEnabled: true
    readinessEnabled: true
enclave:
  configs:
    dataserviceBaseURL: http://aggregion-cdp-dataservice-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN
    dataserviceToken: NEED_GENERATING
    workerHeapSizeMb: 64000
  enabled: true
  imageServices:
    pullPolicy: IfNotPresent
    repository: registry.aggregion.com/enclave-external-services
    tag: latest
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 128000m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    enabled: true
    hosts:
      - host: enclave.$BASE_FRONT_DOMAIN
        paths:
          - /
    tls:
      - hosts:
          - enclave.$BASE_FRONT_DOMAIN
        secretName: enclave-front-tls # CHANGEIT
frontend:
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 128000m
    enabled: true
    hosts:
      - host: $BASE_FRONT_DOMAIN
    tls:
      - hosts:
          - $BASE_FRONT_DOMAIN
        paths:
          backend:
            service:
              name: aggregion-cdp-backend
              port:
                name: httpapi
          pathType: Prefix
        secretName: front-tls # CHANGEIT
gatekeeper:
  config:
    clientId: dcp # CHANGEIT
    clientSecret: i7gj...Hn4O # CHANGEIT
    discoveryUrl: https://kc19.$BASE_FRONT_DOMAIN/realms/aggregion/.well-known/openid-configuration
    encryptionKey: $GK_CONFIG_ENCRYPTION_KEY
    redirectionUrl: $BASE_FRONT_URL_SCHEMA://$BASE_FRONT_DOMAIN
    signInPage: ""
    storeUrl: ""
    verbose: true
  enabled: true
  image:
    repository: registry.aggregion.com/gatekeeper
    tag: 1.4.2
imagePullSecrets:
  - name: aggregionregistry # CHANGEIT
metadataSeed:
  enabled: true
  config:
    dmpBackendBaseUrl: http://aggregion-cdp-backend-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8080
    nodeTlsRejectUnauthorized: true
oidcprovider:
  config:
    clientPostLogoutRedirectUris:
      - https://kc19.$BASE_FRONT_DOMAIN/realms/aggregion/broker/aggregion-oidc/endpoint/logout_response
    clientRedirectUris:
      - https://kc19.$BASE_FRONT_DOMAIN/realms/aggregion/broker/aggregion-oidc/endpoint
    logLevel: info
    successSignupRedirectUri: $BASE_FRONT_URL_SCHEMA://$BASE_FRONT_DOMAIN
    ttl:
      accessToken: 1000000
  enabled: true
  ingress:
    enabled: true
    hosts:
      - host: auth.$BASE_FRONT_DOMAIN
    tls:
      - hosts:
          - auth.$BASE_FRONT_DOMAIN
        secretName: auth-front-tls # CHANGEIT
  probes:
    livenessEnabled: true
    readinessEnabled: true
providerLinks:
  - name: $ACCOUNT_ID
    url: http://aggregion-cdp-enclave-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8010
providers:
  - "$ACCOUNT_ID"
providerNames:
  $ACCOUNT_ID:
    ru: Розничная сеть
    en: Retail network
metadataParams:
  credentials:
    encryptionKey: "$MD_PARAMS_CREDS_ENCRYPTION_KEY" # GENERATED
    iv: "$MD_PARAMS_CREDS_IV" # GENERATED
metadataService:
  enabled: false
  migrationEnabled: false
  probes:
    livenessEnabled: false
    readinessEnabled: false
  config:
    amqp:
      url: amqp://aggregion-externals-rabbit-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:5672
    dmpBackendBaseUrl: http://aggregion-cdp-backend-cdp$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN:8080/
    jwtSecret: $MDS_CONFIG_JWT_SECRET # GENERATED
    logLevel: trace
    metrics:
      enabled: true
    postgres:
      host: aggregion-externals-postgres-externals$URL_SUFFIX.$CDP_NS.svc.$CLUSTER_DOMAIN
      logging: true
  cronjob:
    enabled: true
dbMetadataSync:
  enabled: false
  probes:
    livenessEnabled: false
    readinessEnabled: false
  config:
    logLevel: "trace"
    metadataServiceToken: NEED_GENERATING
    instances:
      - name: ch
        rdbmsType: clickhouse
        connectionOptions:
          hostname: 127.0.0.1 # CHANGEIT
          port: 8123
        credentials:
          username: "someuser" # CHANGEIT
          password: "somepass" # CHANGEIT
        databases:
          - name: databasename # CHANGEIT
    metrics:
      enabled: true
  cronjob:
    enabled: true
metrics:
  enabled: false
  serviceMonitor:
    enabled: false
