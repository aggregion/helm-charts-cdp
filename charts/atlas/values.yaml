# Default values for aggregion-externals.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
imagePullSecrets:
  - name: aggregionregistry

clusterDomain: cluster.local

serviceAccount:
  create: false
  annotations: {}
  name: "default"

atlas:
  enabled: true
  cassandra:
    auth:
      enabled: false
      username: cassandra
      password: cassandra
  nameOverride: ""
  fullnameOverride: ""
  restartPolicy: Always
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  image:
    repository: "registry.aggregion.com/atlas"
    pullPolicy: IfNotPresent
    tag: "1.42.3"
  service:
    type: ClusterIP
    port: 21000
  listenPort: 21000
  securityContext: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: "1.5Gi"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  truststore:
    enabled: false
    file: /opt/atlas/data/truststore.jks
    credsFile: /opt/atlas/data/creds.jceks
    password: changeit
  file:
    enableAuth: true
  keycloak:
    enableAuth: false
    realm: aggregion
    authServerUrl: http://keycloak-server/auth
    sslRequired: external
    resource: atlas
    credentials:
      secret: atlasclientsecret
  users:
    admin:
      login: admin
      password: admin
    datasteward:
      login: datasteward
      password: datasteward
    datascientist:
      login: datascientist
      password: datascientist
  ingress:
    enabled: true
    class: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 128000m
      nginx.ingress.kubernetes.io/limit-connections: "5000"
      nginx.ingress.kubernetes.io/limit-rps: "3000"
      nginx.ingress.kubernetes.io/limit-rpm: "60000"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    hosts:
      - host: atlas.local
        paths:
          - "/"
    tls: []

cassandra:
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  storageSize: "10G"
  storageClass: ""
  restartPolicy: Always
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  image:
    repository: "cassandra"
    pullPolicy: IfNotPresent
    tag: "3.11.14"
  service:
    type: ClusterIP
    port: 9160
  listenPort: 9160
  securityContext: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: "4Gi"
      cpu: "0.1"
  nodeSelector: {}
  tolerations: []
  affinity: {}

kafka:
  enabled: false
  nameOverride: ""
  fullnameOverride: ""
  storageSize: "5G"
  storageClass: ""
  restartPolicy: Always
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  image:
    repository: "docker.io/bitnami/kafka"
    pullPolicy: IfNotPresent
    tag: "2"
  service:
    type: ClusterIP
    port: 9092
  listenPort: 9092
  securityContext: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: "400Mi"
  nodeSelector: {}
  tolerations: []
  affinity: {}

kafkaInit:
  # enabled: false # should depends on "hadoop"
  image:
    repository: "busybox"
    pullPolicy: IfNotPresent
    tag: "latest"
  command: '["sh", "-c", "mkdir -p /bitnami && chown -R 1001:0 /bitnami"]'
  resources:
    limits:
      cpu: "0.05"
      memory: 200Mi

solr:
  auth:
    enabled: false
    user: admin
    password: password
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  storageSize: "10G"
  storageClass: ""
  restartPolicy: Always
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  image:
    repository: registry.aggregion.com/solr
    pullPolicy: IfNotPresent
    tag: "8.11"
  service:
    type: ClusterIP
    port: 8983
  listenPort: 8983
  securityContext: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: "700Mi"
      cpu: "0.1"
  nodeSelector: {}
  tolerations: []
  affinity: {}

solrInit:
  # enabled: false # depends on "hadoop"
  image:
    repository: "busybox"
    pullPolicy: IfNotPresent
    tag: "latest"
  command: '["sh", "-c", "mkdir -p /vol-path && chown -R 8983:8983 /vol-path"]'
  resources:
    limits:
      cpu: "0.05"
      memory: 200Mi

zookeeper:
  enabled: true
  replicas: 3
  nameOverride: ""
  fullnameOverride: ""
  restartPolicy: Always
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  image:
    repository: "zookeeper"
    tag: "3.8.0-temurin"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    serverPort: 2888
    clientPort: 2181
    leaderElectionPort: 3888
  serverListenPort: 2888
  clientListenPort: 2181
  leaderElectionListenPort: 3888
  securityContext: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: "300Mi"
      cpu: "0.01"
  nodeSelector: {}
  tolerations: []
  affinity: {}

busybox:
  image:
    repository: busybox
    tag: latest
