#!/bin/bash

NS=${NS:-cdpstage-dmpd-918-test}
INSTANCE=${INSTANCE:-cdp-test1}
PF_PORT=${PF_PORT:-33333}

SERVICES=$(kubectl -n $NS get svc -l app.kubernetes.io/instance=$INSTANCE -oyaml | yq .items[] -o j | jq . -c)

for service in $SERVICES; do
  service_name=$(echo $service | jq .metadata.name -r)
  ports=$(echo $service | jq .spec.ports[] -c)
  component=$(echo $service | jq '.metadata.labels."app.kubernetes.io/component"' -r)

  if [ $(echo "$service_name" | grep 'scone-las') ]; then
    continue
  elif [ $(echo "$service_name" | grep 'dc-agentk8s-dc') ]; then
    continue
  fi

  echo "$component/$service_name:"

  for port_desc in $ports; do
    port=$(echo $port_desc | jq .port)
    echo "  port: $port"
    kubectl -n $NS port-forward svc/$service_name $PF_PORT:$port > /dev/null &
    sleep 1
    PF_PID=$!
    url_path='/'
    method=GET
    data=''
    header=''
    substring='< HTTP/1'
    substring_before=0
    substring_after=0

    case $component in
      'null')
        case $service_name in
          'minio-common-console')
            method=POST
        url_path='/api/v1/login'
        data='{"accessKey":"ewfwqef","secretKey":"erfwerfwerf"}'
            header='Content-Type: application/json'
            ;;
          *)
            if [ $(echo "$service_name" | grep 'dc-dc-dc') ]; then
              url_path='/deployer-app/api/v1/platform/test'
          substring='Authorization'
          substring_before=1
              substring_after=1
            fi
        ;;
      esac
        ;;
      'auth-service')
        url_path=/api/users/resetPassword
        method=POST
        ;;
      'oidc-provider')
        url_path=/signup
        method=POST
        ;;
      'dataservice')
        url_path=/api/datasets
        ;;
    esac

    url=http://localhost:$PF_PORT$url_path
    # echo "Check URL: $url -X $method -vvv"
    res=$(curl $url -X $method -vvv -s 2>&1 -d "$data" -H "$header" | grep "$substring" -A $substring_after -B $substring_before )
    echo "${res:-nothing}" | sed 's/^/    /'
    [ ! -z $PF_PID ] && kill $PF_PID && wait $! 2>/dev/null
  done;
  echo '------------'
done;
